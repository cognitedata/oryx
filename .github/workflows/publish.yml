on:
  push:
    tags:
      - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10

name: Publish Release
jobs:
  build:
    name: Create Release
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
    - name: Checkout code
      uses: actions/checkout@v1

    - name: Setup .NET Core
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 5.0.100

    - name: Setup dotnet manifest
      run: dotnet new tool-manifest
    - name: Setup paket
      run: dotnet tool install Paket
    - name: Dotnet Pack
      run: dotnet pack -c release -p:PackageVersion=${GITHUB_REF##*/v}

    - name: Push Oryx Nuget
      run: dotnet nuget push src/bin/Release/*.nupkg -s https://api.nuget.org/v3/index.json -k ${{ secrets.NUGET_API_KEY }}
      continue-on-error: false
    - name: Push Oryx.NewtonsoftJson Nuget
      run: dotnet nuget push extensions/Oryx.NewtonsoftJson/bin/Release/*.nupkg -s https://api.nuget.org/v3/index.json -k ${{ secrets.NUGET_API_KEY }}
      continue-on-error: false
    - name: Push Oryx.Protobuf Nuget
      run: dotnet nuget push extensions/Oryx.Protobuf/bin/Release/*.nupkg -s https://api.nuget.org/v3/index.json -k ${{ secrets.NUGET_API_KEY }}
      continue-on-error: false
    - name: Push Oryx.SystemTextJson Nuget
      run: dotnet nuget push extensions/Oryx.SystemTextJson/bin/Release/*.nupkg -s https://api.nuget.org/v3/index.json -k ${{ secrets.NUGET_API_KEY }}
      continue-on-error: false
    - name: Push Oryx.ThothJsonNet Nuget
      run: dotnet nuget push extensions/Oryx.ThothJsonNet/bin/Release/*.nupkg -s https://api.nuget.org/v3/index.json -k ${{ secrets.NUGET_API_KEY }}
      continue-on-error: false

    - name: Create Release
      uses: actions/create-release@master
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        draft: false
